version: 2.1
commands:
  setup_environment:
    description: "Setup testing environment"
    parameters:
      cache_key:
        type: string
        default: snark-cache-main
    steps:
      - run: set -e
      - setup_remote_docker
      - run:
          name: Prepare envrionment and install dependencies
          command: |
            source ci/setup-environment.sh
            cat ci/setup-environment.sh >> ${BASH_ENV}
            mkdir -p "$CIRCLE_WORKING_DIRECTORY/.bin"
            wget https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
            tar -C "$CIRCLE_WORKING_DIRECTORY/.bin" -xvf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
            mv $CIRCLE_WORKING_DIRECTORY/.bin/sccache-0.2.13-x86_64-unknown-linux-musl/sccache $CIRCLE_WORKING_DIRECTORY/.bin/sccache
            rm -rf "$CIRCLE_WORKING_DIRECTORY/.cargo/registry"
            sudo apt-get update && sudo apt-get install -y clang llvm-dev llvm pkg-config xz-utils make libssl-dev libssl-dev
      - restore_cache:
          keys:
            - << parameters.cache_key >>
  clear_environment:
    description: "Clear environment"
    parameters:
      cache_key:
        type: string
        default: snark-main
    steps:
      - run: (sccache -s||true)
      - run: set +e
      - save_cache:
          key: << parameters.cache_key >>
          paths:
            - .cache/sccache
            - .cargo
jobs:
  rust_stable:
    docker:
      - image: cimg/rust:1.43.0
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snark-main
      - run:
          name: Build and run tests
          command: >
            cargo test --all -- --skip dpc
            --skip dpc_integration_test --skip startup_handshake_stored_peers
      - persist_to_workspace:
          root: ~/
          paths: project/
      - clear_environment:
          cache_key: snark-main
  analyse_and_store_coverage:
    machine:
      image: ubuntu-1604:202004-01
      docker_layer_caching: true
    resource_class: xlarge
    steps:
      - attach_workspace:
          at: /home/circleci/project/
      - run:
          name: Run kcov
          command: >
            cd ~/project/project/ &&
            docker run --security-opt seccomp=unconfined -v ~/project/project/:/home/circleci/project/
            daniilr/kcov bash /home/circleci/project/ci/kcov.sh
      - run: cd ./project/ && bash <(curl -s https://codecov.io/bash)
  rust_nightly:
    docker:
      - image: daniilr/rust-nightly:2020-05-15
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snark-cache-nighty
      - run: rustup component add rustfmt
      - run: cargo fmt -- --check
      - run:
          name: Build and test
          command: cargo test --all -- --skip dpc --skip dpc_integration_test --skip startup_handshake_stored_peers
      - clear_environment:
          cache_key: snark-cache-nighty
workflows:
  version: 2
  main-workflow:
    jobs:
      - rust_stable
      - rust_nightly
      - analyse_and_store_coverage:
          requires:
            - rust_stable
